package com.cwh.design.adapter;
/**
 * 适配器模式(和代理模式有点像)
 * 区别：适配器）将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
 * 		代理）为其他对象提供一种代理以控制对这个对象的访问；代理者和被代理者需事先同一个接口；而适配器不需要
 * 你想使用一个已经存在的类，而它的接口不符合你的需求
 * 你想创建一个可以复用的类，该类可以与其他不相关的类或不可预见的类（即那些接口 可能不一定兼容的类）协同工作
 * （仅适用于对象Adapter）你想使用一些已经存在的子类，但是不可能对每一个都进行 子类化以匹配它们的接口。对象适配器可以适配它的父类接口
 * @author  cwh
  ___                  _
/\  _ `\   _       _  /\ \                       
\ \ \/\_\ /\ \    /\ \\ \ \___        
 \ \ \/_/_\ \ \  _\ \ \\ \  _ `\  
  \ \ \L\ \\ \ \/ _` \ \\ \ \ \ \ 
   \ \____/ \ \_ /_ \_ / \ \_\ \_\
    \/___/   \/_/  \/_/   \/_/\/_/
 *
 */
public class Test {

	public static void main(String []args){
	Target target = new Adapter(new Adaptee());
	target.adapteeMethod();
	target.adapterMethod();
	}
}
